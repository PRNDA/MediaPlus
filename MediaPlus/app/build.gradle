apply plugin: 'com.android.application'
apply from: "${project.rootDir}/global.gradle"

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "app.mobile.nativeapp.com.mediaplus"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
            }
        }

        ndk {
            abiFilters 'armeabi-v7a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }
//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }

//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['libs']
//        }
//    }
    /**
     * manifest.srcFile 'AndroidManifest.xml'
     java.srcDirs = ['src']
     resources.srcDirs = ['src']
     aidl.srcDirs = ['src']
     renderscript.srcDirs = ['src']
     res.srcDirs = ['res']
     assets.srcDirs = ['assets']
     *
     */

//    }
    lintOptions {
        abortOnError false
    }



    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }

//
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation supportDependencies["appCompatV7"]
    testImplementation testDependecencies["junit"]
    api project(':libraries:libmodule')
}
